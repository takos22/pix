version: 2.1

executors:
  node-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 16.20.2
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
    resource_class: small
  node-redis-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 16.20.2
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
      - image: postgres:14.8-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:7.0.12-alpine
    resource_class: small


workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout:
          context: Pix

      - api_install:
          context: Pix
          requires:
            - checkout

      - api_lint:
          context: Pix
          requires:
            - api_install

      - api_test:
          context: Pix
          requires:
            - api_install

jobs:
  checkout:
    executor:
      name: node-docker
    working_directory: ~/pix
    steps:
      - checkout
      - run:
          name: Lint and test root
          command: |
            npm ci
            npm run lint:scripts
            npm run lint:yaml
            npm run test:root
            rm -rf .git/
      - persist_to_workspace:
          root: ~/pix
          paths:
            - .

  api_install:
    executor:
      name: node-docker
    working_directory: ~/pix/api
    steps:
      - attach_workspace:
          at: ~/pix
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "cachekey" }}
      - run: npm ci --no-optional
      - save_cache:
          key: v7-api-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: ~/pix
          paths:
            - api

  api_lint:
    executor:
      name: node-redis-postgres-docker
    working_directory: ~/pix/api
    steps:
      - attach_workspace:
          at: ~/pix
      - run:
          name: Lint
          command: npm run lint
          environment:
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci
            TEST_REDIS_URL: redis://localhost:6379
          when: always

  api_test:
    executor:
      name: node-redis-postgres-docker
    working_directory: ~/pix/api
    steps:
      - attach_workspace:
          at: ~/pix
      - run:
          name: Test
          command: npm run test
          environment:
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci
            TEST_REDIS_URL: redis://localhost:6379
            MOCHA_FILE: /home/circleci/test-results/test-results.[hash].xml
            MOCHA_REPORTER: mocha-junit-reporter
          when: always
      - store_test_results:
          path: /home/circleci/test-results
      - store_artifacts:
          path: /home/circleci/test-results
